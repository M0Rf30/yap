package makepkg

var buildEnvironmentDeps = []string{
	"base-devel",
}

const dotBuildinfo = `format = 2
pkgname = {{.PkgName}}
pkgbase = {{.PkgName}}
pkgver = {{if .Epoch}}{{.Epoch}}:{{end}}{{.PkgVer}}-{{.PkgRel}}
{{- if .ArchComputed}}
pkgarch = {{.ArchComputed}}
{{- end }}
pkgbuild_sha256sum = {{.Checksum}}
{{- if .Maintainer}}
packager = {{.Maintainer}}
{{- end }}
builddate = {{.BuildDate}}
builddir = {{.PackageDir}}
startdir = {{.Home}}
buildtool = yap
buildtoolver = {{.YAPVersion}}
{{- if .Options}}
{{ range .Options }}options = {{ . }}
{{- else }}
options = strip
options = staticlibs
{{ end }}
{{- end }}
`

const dotPkginfo = `# Generated by yap {{.YAPVersion}}
pkgname = {{.PkgName}}
pkgbase = {{.PkgName}}
xdata = pkgtype={{.PkgType}}
pkgver = {{if .Epoch}}{{.Epoch}}:{{end}}{{.PkgVer}}-{{.PkgRel}}
pkgdesc = {{.PkgDesc}}
url = {{.URL}}
builddate = {{.BuildDate}}
{{- if .Maintainer}}
packager = {{.Maintainer}}
{{- end }}
size = {{.InstalledSize}}
arch = {{.ArchComputed}}
{{- if .License}}
{{ range .License }}license = {{ . }}
{{ end }}
{{- end }}
{{- if .Replaces}}
{{ range .Replaces }}replaces = {{ . }}
{{ end }}
{{- end }}
{{- if .Group}}
{{ range .Group }}group = {{ . }}
{{ end }}
{{- end }}
{{- if .Conflicts}}
{{ range .Conflicts }}conflict = {{ . }}
{{ end }}
{{- end }}
{{- if .Provides}}
{{ range .Provides }}provides = {{ . }}
{{ end }}
{{- end }}
{{- if .Backup}}
{{ range .Backup }}backup = {{ . }}
{{ end }}
{{- end }}
{{- if .Depends}}
{{ range .Depends }}depend = {{ . }}
{{ end }}
{{- end }}
{{- if .OptDepends}}
{{ range .OptDepends }}optdepend = {{ . }}
{{ end }}
{{- end }}
{{- if .MakeDepends}}
{{ range .MakeDepends }}makedepend = {{ . }}
{{ end }}
{{- end }}
`

//nolint:lll
const dotMtree = `#mtree
/set type=file uid=0 gid=0 mode=644
{{- range . }}
{{- if eq .Type "dir" }}
.{{ .Destination }} time={{ .FileInfo.ModTime }}.0 type=dir
{{- else if eq .Type "symlink" }}
.{{ .Destination }} time={{ .FileInfo.ModTime }}.0 mode={{ printf "%o" .FileInfo.Mode }} type=link link={{ .Source }}
{{- else }}
{{- if eq .Destination "/.BUILDINFO" }}
.{{ .Destination }} time={{ .FileInfo.ModTime }}.0 size={{ .FileInfo.Size }} sha256digest={{ printf "%x" .SHA256 }}
{{- else if eq .Destination "/.PKGINFO" }}
.{{ .Destination }} time={{ .FileInfo.ModTime }}.0 size={{ .FileInfo.Size }} sha256digest={{ printf "%x" .SHA256 }}
/set mode=755
{{- else }}
.{{ .Destination }} time={{ .FileInfo.ModTime }}.0 mode={{ printf "%o" .FileInfo.Mode }} size={{ .FileInfo.Size }} sha256digest={{ printf "%x" .SHA256 }}
{{- end }}
{{- end }}
{{- end }}
`

const postInstall = `
{{- if .PreInst}}
pre_install() {
{{.PreInst}}
}
{{- end }}

{{- if .PostInst}}
post_install() {
{{.PostInst}}
}
{{- end }}

{{- if .PreInst}}
pre_upgrade() {
{{.PreInst}}
}
{{- end }}

{{- if .PostInst}}
post_upgrade() {
{{.PostInst}}
}
{{- end }}

{{- if .PreRm}}
pre_remove() {
{{.PreRm}}
}
{{- end }}

{{- if .PostRm}}
post_remove() {
{{.PostRm}}
}
{{- end }}
`

const specFile = `
{{- if .Maintainer}}
# Maintainer: {{.Maintainer}}
{{- end }}
pkgname={{.PkgName}}
{{- if .Epoch}}
epoch={{.Epoch}}
{{- end }}
pkgver={{.PkgVer}}
pkgrel={{.PkgRel}}
pkgdesc="{{.PkgDesc}}"
{{- if .ArchComputed}}
arch=({{.ArchComputed}})
{{- end }}
{{- if .Depends}}
depends=(
  {{ range .Depends }}"{{ . }}"
  {{ end }}
)
{{- end }}
{{- if .OptDepends}}
optdepends=(
  {{ range .OptDepends }}"{{ . }}"
  {{ end }}
)
{{- end }}

{{- /* Optional fields */ -}}
{{- if .Provides}}
provides=(
  {{ range .Provides }}"{{ . }}"
  {{ end }}
)
{{- end }}
{{- if .Conflicts}}
conflicts=(
  {{ range .Conflicts }}"{{ . }}"
  {{ end }}
)
{{- end }}
{{- if .URL}}
url="{{.URL}}"
{{- end }}
{{- if .Backup}}
backup=(
  {{ range .Backup }}"{{ . }}"
  {{ end }}
)
{{- end }}
{{- if .License}}
license=(
  {{ range .License }}"{{ . }}"
  {{ end }}
)
{{- end }}
{{- if .Options}}
options=(
  {{ range .Options }}"{{ . }}"
  {{ end }}
)
{{- end }}
install={{.PkgName}}.install

package() {
{{.Package}}
}
`
