name: Docker Image CI

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: m0rf30/yap*
          labels: |
            maintainer=Yap
            org.opencontainers.image.authors=M0Rf30
            org.opencontainers.image.title=yap
            org.opencontainers.image.description=Package software with ease ðŸ“¦
            org.opencontainers.image.vendor=M0Rf30
          tags: |
            type=raw,value=latest

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            m0rf30/yap-alpine:latest
            ghcr.io/m0rf30/yap-alpine:latest
          file: docker/alpine/Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            m0rf30/yap-arch:latest
            ghcr.io/m0rf30/yap-arch:latest
          file: docker/arch/Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            m0rf30/yap-opensuse-tubleweed:latest
            ghcr.io/m0rf30/yap-opensuse-tubleweed:latest
          file: docker/opensuse-tubleweed/Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            m0rf30/yap-rocky-8:latest
            ghcr.io/m0rf30/yap-rocky-8:latest
          file: docker/rocky-8/Dockerfile

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            m0rf30/yap-ubuntu-focal:latest
            ghcr.io/m0rf30/yap-ubuntu-focal:latest
          file: docker/ubuntu-focal/Dockerfile

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "m0rf30/yap-alpine:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "m0rf30/yap-arch:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "m0rf30/yap-opensuse-tubleweed:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "m0rf30/yap-rocky-8:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "m0rf30/yap-ubuntu-focal:latest"
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results.sarif"
